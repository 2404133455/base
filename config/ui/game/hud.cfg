game_hud_recalc = [
    game_hud_panel_icon_width    = (*f (get game_hud_panel_width) 0.22)
    game_hud_panel_content_width = (-f (get game_hud_panel_width) $game_hud_panel_icon_width)

    game_hud_player_effect_height      = (*f $game_hud_panel_content_width 0.067)

    game_hud_player_mainbar_width       = $game_hud_panel_content_width
    game_hud_player_mainbar_height      = (*f $game_hud_panel_content_width 0.08)
    game_hud_player_mainbar_text_size   = (*f $game_hud_player_mainbar_height 50)

    game_hud_player_subbar_width      = (*f $game_hud_panel_content_width 0.8)
    game_hud_player_subbar_height     = (*f $game_hud_player_subbar_width 0.08)

    game_hud_largepanel_text_size     = (*f $game_hud_largepanel_width 2.5)
]

deffvarp game_hud_panel_width 0.2 0.32 1.0 [
    game_hud_recalc
]

deffvarp game_hud_largepanel_width 0.2 0.6 1.0 [
    game_hud_recalc
]

game_hud_recalc

game_hud_player_health_smooth      = 0
game_hud_player_health_last_regen  = 0
game_hud_player_health_regen_anim  = 0

game_hud_player_last_impulse_count = 0
game_hud_player_impulse_regen_anim = 0

game_hud_weapon_weapon_last        = 0
game_hud_player_weapon_last_time   = 0
game_hud_weapon_switch_anim        = 0
game_hud_weapon_pickup_anim        = 0
game_hud_weapon_ammo_actual        = 0
game_hud_weapon_last_state         = 0

# GAME_HUD_PLAYER_EFFECTS_DEF [
    [ "bleed" #PULSE_BLEED getclientbleeding ]
    [ "burn"  #PULSE_BURN  getclientburning  ]
    [ "shock" #PULSE_SHOCK getclientshocking ]
    [ "buff"  #PULSE_BUFF  getclientbuffing  ]
]

// 1:<icon> 2:<colour> 3:<check>
ui_game_hud_player_effects_effect = [
    if $arg3 [
        uifill $game_hud_player_effect_height $game_hud_player_effect_height [
            local _size
            _size = (gameui_anim_pulse 1 (*f $game_hud_player_effect_height 0.9) $game_hud_player_effect_height)

            uiimage $arg1 $arg2 0 $_size $_size
        ]
    ]
]

ui_game_hud_player_effects = [
    uifill 0 $game_hud_player_effect_height [
        uihlist (*f $game_hud_panel_content_width 0.01) [
            looplist item $GAME_HUD_PLAYER_EFFECTS_DEF [
                local _icon _colour _check
                _icon   = (concatword "data/textures/icons/" (at $item 0))
                _colour = (getclientrescolour $ui_hud_focus (at $item 1))
                _check  = (at $item 2)
                _check  = ($_check $ui_hud_focus)

                ui_game_hud_player_effects_effect $_icon $_colour $_check
            ]
        ]
    ]
]

# ui_game_hud_player_health [
    local _health _healthmeter _meter_smooth_t _bar_colour _text_offset _shadow_offset
    _health = (divf (getclienthealth $ui_hud_focus) (getclientspawnhealth $ui_hud_focus))

    _meter_smooth_t = (clampf (*f 0.02 $curtime) 0 1)
    game_hud_player_health_smooth = (lerpf $game_hud_player_health_smooth (clampf $_health 0 1) $_meter_smooth_t)

    _healthmeter = (*f $game_hud_player_health_smooth $game_hud_player_mainbar_width)

    if (&& [getclientregen $ui_hud_focus] [!= $game_hud_player_health_last_regen (getclientregen $ui_hud_focus)]) [
        game_hud_player_health_last_regen = (getclientregen $ui_hud_focus)
        game_hud_player_health_regen_anim = 1
    ]

    _bar_colour = (tool_colour_lerp_int #(hsvtohex [0 0.75 1]) #(hsvtohex [120 0.6 0.75]) $_health)

    if (>f $game_hud_player_health_regen_anim 0) [
        _bar_colour = (tool_colour_lerp_int $_bar_colour #(hsvtohex [120 0.3 1]) $game_hud_player_health_regen_anim)
    ]

    uiborderedimageclamped $skintex #(hsvtohex [30 0.25 0.35]) 0 $ui_texborder $ui_screenborder $game_hud_player_mainbar_width $game_hud_player_mainbar_height [
        uistyle leftbottom
        uicolourblend 0.5

        uiborderedimageclamped $skintex $_bar_colour 0 $ui_texborder $ui_screenborder $_healthmeter $game_hud_player_mainbar_height [
            uistyle leftbottom
        ]

        uiclip $game_hud_player_mainbar_width $game_hud_player_mainbar_height 0 0 [
            uistyle leftbottom

            local _regen_flash
            _regen_flash = (*f $game_hud_player_mainbar_width (-f 1 $game_hud_player_health_regen_anim))

            uioffset $_regen_flash (*f $game_hud_player_mainbar_width -0.06) [
                uiimage "data/textures/hud/glow" 0xffffff 0 (*f $game_hud_player_mainbar_width 0.4) (*f $game_hud_player_mainbar_width 0.2) [
                    uicolourblend $game_hud_player_health_regen_anim
                ]
            ]
        ]

        local _health_text _text_size_anim _text_size

        _text_size_anim = (gameui_anim_flash $game_hud_player_health_regen_anim 1 1)

        _text_offset   = (*f $game_hud_player_mainbar_width 0.01)
        _shadow_offset = (*f $game_hud_player_mainbar_width 0.012)

        _text_offset = (-f $_text_offset (*f $_text_size_anim -0.0005))

        uiclip $game_hud_player_mainbar_width $game_hud_player_mainbar_height (*f $game_hud_player_mainbar_width -0.02) $_text_offset [
            uifill $game_hud_player_mainbar_width 0
            _health_text    = (? (& $mutators (<< 1 $G_M_INSTAGIB)) "INSTAGIB" (toint (ceilf (*f $_health 100))))
            _text_size      = (lerpf $game_hud_player_mainbar_text_size (*f $game_hud_player_mainbar_text_size 1.1) $_text_size_anim)

            uistyle leftmiddle

            uifont "play/clear/bold" [
                uistyle leftmiddle

                uioffset $_shadow_offset $_shadow_offset [
                    uicolourtext $_health_text 0 $_text_size [
                        uicolourblend 0.75
                    ]
                ]

                uitext $_health_text $_text_size
            ]
        ]

        ui_gameui_shadow
    ]

    game_hud_player_health_regen_anim = (animstep $game_hud_player_health_regen_anim 200 -1)
]

// 1:<length> 2:<highlight>
# ui_game_hud_player_impulse_segment [
    local _colour _length _anim _player_colour
    _player_colour = (getclientcolour $ui_hud_focus $playereffecttone $playereffecttonelevel $playereffecttonemix)
    _colour = (? $arg2 #(hsvtohex [30 0.1 1]) $_player_colour)
    _length = $arg1

    if $_highlight [
        _length = (+f $_length (*f $_length $game_hud_player_impulse_regen_anim))
    ]

    uiborderedimageclamped $skintex $_colour 0 $ui_texborder $ui_screenborder $_length $game_hud_player_subbar_height [
        if $_highlight [
            uicolourblend (-f 1 $game_hud_player_impulse_regen_anim)
        ]
        ui_gameui_shadow
    ]
]

# ui_game_hud_player_impulse [
    local _gap _impulses _impulsemeter _regen_time _meter_bg_colour _meter_bg_blend _total_imp_energy _meter_flash_anim
    _gap           = (*f $game_hud_player_subbar_width 0.01)
    _impulses     = (- $impulsecount (getclientimpulsecount $ui_hud_focus))
    _impulsemeter = (- $impulsecostmeter (getclientimpulsecostmeter $ui_hud_focus))

    _total_imp_energy = (divf $_impulsemeter $impulsecostmeter)

    // Clamp to 0.015 to avoid image border rounding issues
    _impulsemeter = (*f (clampf $_total_imp_energy 0.015 1) $game_hud_player_subbar_width)

    _regen_time = (getclientimpulselastcount $ui_hud_focus)

    if $_regen_time [
        _impulses = (clamp (+ $_impulses 1) 0 $impulsecount)
    ]

    if (< $game_hud_player_last_impulse_count $_impulses) [
        game_hud_player_impulse_regen_anim = 1
    ]

    _meter_bg_colour = #(hsvtohex [30 0.1 0.35])
    _meter_bg_blend  = 0.5

    if (<f $_total_imp_energy 0.25) [
        _meter_flash_anim = (gameui_anim_pulse 2 0 1)
        _meter_bg_colour  = (tool_colour_lerp_int $_meter_bg_colour #(hsvtohex [0 1 1]) $_meter_flash_anim)
        _meter_bg_blend   = (lerpf 0.5 0.75 $_meter_flash_anim)
    ]

    uigroup [
        uifill 0 $game_hud_player_subbar_height // Reserve vertical space for the impulse bar

        uihlist 0 [
            uistyle leftbottom

            loop i $_impulses [
                local _length _total_gaps _highlight _anim
                _total_gaps = (*f $_gap (- $impulsecount 1))
                _length = (divf (-f $game_hud_player_subbar_width $_total_gaps) $impulsecount)

                _highlight = (&& (= $i (- $_impulses 1)) $_regen_time)

                ui_game_hud_player_impulse_segment $_length $_highlight

                // Use uifill for gaps, uihlist spacing is weird and math doesn't match up
                if (= $i (- $impulsecount 1)) [] [
                    uifill $_gap 0
                ]
            ]
        ]

        uiborderedimageclamped $skintex $_meter_bg_colour 0 $ui_texborder $ui_screenborder $game_hud_player_subbar_width (*f $game_hud_player_subbar_height 0.25) [
            uicolourblend $_meter_bg_blend

            uiborderedimageclamped $skintex #(hsvtohex [30 0.1 1]) 0 $ui_texborder $ui_screenborder $_impulsemeter (*f $game_hud_player_subbar_height 0.25) [
                uistyle leftbottom
            ]

            uistyle leftbottom
        ]

        ui_gameui_shadow
    ]

    game_hud_player_last_impulse_count = $_impulses
    game_hud_player_impulse_regen_anim = (animstep $game_hud_player_impulse_regen_anim 100 -1)
]

# ui_game_hud_player [
    uihlist 0 [
        local _model_icon
        _model_icon = (at ["playermale" "playerfemale"] (getclientmodel $ui_hud_focus))
        _model_icon = (concatword "data/textures/icons/" $_model_icon)
        uiimage $_model_icon (getclientcolour $ui_hud_focus $playerdisplaytone $playerdisplaytonelevel $playerdisplaytonemix) 0 $game_hud_panel_icon_width $game_hud_panel_icon_width

        uivlist (*f $game_hud_panel_content_width 0.025) [
            uistyle leftbottom

            ui_game_hud_player_effects
            ui_game_hud_player_health
            ui_game_hud_player_impulse

            uipropchild [
                uistyle leftbottom
            ]
        ]
    ]
]

game_hud_weapon_has_store = [
    local _weap
    _weap = (at $W_NAMES $arg1)

    || [<= $[@[_weap]ammoitem] 1] [< $[@[_weap]ammostore] 0]
]

// 1:<weapon index> 2:<length>
# ui_game_hud_weapon_inventory_item [
    local _weap _ammo _meter _icon _icon_size _shadow_offset _weap_colour _bar_colour
    _weap       = (at $W_NAMES $arg1)
    _ammo       = (max (getclientweapammo $ui_hud_focus $arg1) 0)
    _maxammo    = $[@[_weap]ammoclip]
    _meter      = (*f $_length (divf $_ammo $_maxammo))
    _icon       = $[@[_weap]tex]
    _icon_size  = (*f $game_hud_panel_content_width 0.05)
    _shadow_offset = (*f $game_hud_player_mainbar_width 0.008)
    _weap_colour   = $[@[_weap]colour]
    _bar_colour    = (tool_colour_lerp_int $_weap_colour 0x202020 0.5)

    uiborderedimageclamped $skintex #(hsvtohex [30 0.25 0.35]) 0 $ui_texborder $ui_screenborder $_length $game_hud_player_subbar_height [
        uicolourblend 0.5

        uiborderedimageclamped $skintex $_bar_colour 0 $ui_texborder $ui_screenborder $_meter $game_hud_player_subbar_height [
            uistyle rightbottom
        ]

        uispace (*f $game_hud_panel_content_width 0.01) 0 [
            uistyle rightmiddle

            uioffset $_shadow_offset $_shadow_offset [
                uiimage $_icon 0 0 $_icon_size $_icon_size [
                    uicolourblend 0.5
                ]
            ]
            uiimage $_icon $_weap_colour 0 $_icon_size $_icon_size
        ]

        ui_gameui_shadow
    ]
]

ui_game_hud_weapon_inventory = [
    local _weap_idxs _gap
    _gap       = (*f $game_hud_player_subbar_width 0.01)
    _weap_idxs = []
    _num_inv   = 0

    loopinventory $ui_hud_focus 0 0 _weap_idx [
        if (&& [!= $_weap_idx (getclientweapselect $ui_hud_focus)] [!= $_weap_idx 0]) [
            append _weap_idxs $_weap_idx
            _num_inv = (+ $_num_inv 1)
        ]
    ]

    uigroup [
        uifill 0 $game_hud_player_subbar_height // Reserve vertical space for the impulse bar

        uihlist 0 [
            loop i $_num_inv [
                local _weap_idx _length _total_gaps
                _weap_idx   = (at $_weap_idxs $i)
                _total_gaps = (*f $_gap (- $_num_inv 1))
                _length     = (divf (-f $game_hud_player_subbar_width $_total_gaps) $_num_inv)

                ui_game_hud_weapon_inventory_item $_weap_idx $_length

                if (= $i (- $_num_inv 1)) [] [
                    uifill $_gap 0
                ]
            ]
        ]

        ui_gameui_shadow
    ]
]

# ui_game_hud_weapon_ammo [
    local _weap_idx _weap _maxammo _ammo _ammometer _bar_colour _shadow_offset _text_offset _state _time _reload_end_time _reload_anim
    _weap_idx  = (getclientweapselect $ui_hud_focus)
    _weap      = (at $W_NAMES $_weap_idx)
    _ammo      = (max (getclientweapammo $ui_hud_focus $_weap_idx) 0)
    _maxammo   = $[@[_weap]ammoclip]
    _state     = (getclientweapstate $ui_hud_focus $_weap_idx)
    _time      = (getclientweaptime $ui_hud_focus $_weap_idx)
    _reload_end_time = (+ $_time $[@[_weap]delayreload])

    _bar_colour = (tool_colour_lerp_int $[@[_weap]colour] 0 $game_hud_weapon_switch_anim)

    if (&& [= $_state 3] [< $lastmillis $_reload_end_time]) [
        _reload_anim = (smoothstep (divf (-f $lastmillis $_time) (-f $_reload_end_time $_time)))
        _ammo = (lerpf $game_hud_weapon_ammo_actual $_ammo $_reload_anim)
    ] [
        game_hud_weapon_ammo_actual = $_ammo
    ]

    _ammometer = (*f (clampf (divf $_ammo $_maxammo) 0 1) $game_hud_player_mainbar_width)

    uiborderedimageclamped $skintex #(hsvtohex [30 0.25 0.35]) 0 $ui_texborder $ui_screenborder $game_hud_player_mainbar_width $game_hud_player_mainbar_height [
        uistyle rightbottom
        uicolourblend 0.5

        uiborderedimageclamped $skintex $_bar_colour 0 $ui_texborder $ui_screenborder $_ammometer $game_hud_player_mainbar_height [
            uistyle rightbottom
        ]

        uiclip $game_hud_player_mainbar_width $game_hud_player_mainbar_height 0 0 [
            uistyle leftbottom

            local _regen_flash
            _regen_flash = (*f $game_hud_player_mainbar_width $game_hud_weapon_pickup_anim)

            uioffset $_regen_flash (*f $game_hud_player_mainbar_width -0.06) [
                uiimage "data/textures/hud/glow" 0xffffff 0 (*f $game_hud_player_mainbar_width 0.4) (*f $game_hud_player_mainbar_width 0.2) [
                    uicolourblend $game_hud_weapon_pickup_anim
                ]
            ]
        ]

        local _ammo_text local _text_size_anim _text_size

        _text_size_anim = (gameui_anim_flash $game_hud_weapon_pickup_anim 1 1)

        _text_offset   = (*f $game_hud_player_mainbar_width 0.01)
        _shadow_offset = (*f $game_hud_player_mainbar_width 0.012)

        _text_offset = (-f $_text_offset (*f $_text_size_anim -0.0005))

        uispace (*f $game_hud_player_mainbar_width 0.02) 0 [
            uistyle rightbottom

            uiclip $game_hud_player_mainbar_width $game_hud_player_mainbar_height 0 $_text_offset [
                uistyle rightmiddle

                uifont "play/clear/bold" [
                    uistyle leftmiddle

                    _ammo_text = ""
                    _text_size = (lerpf $game_hud_player_mainbar_text_size (*f $game_hud_player_mainbar_text_size 1.1) $_text_size_anim)

                    if (game_hud_weapon_has_store $_weap_idx) [
                        _ammo_text = (toint $game_hud_weapon_ammo_actual)
                    ] [
                        _ammo_text = (concat (toint $game_hud_weapon_ammo_actual) "/" (max (getclientweapstore $ui_hud_focus $_weap_idx) 0))
                    ]

                    uioffset $_shadow_offset $_shadow_offset [
                        uicolourtext $_ammo_text 0 $_text_size [
                            uicolourblend 0.75
                        ]
                    ]

                    uitext $_ammo_text $_text_size
                ]
            ]
        ]

        ui_gameui_shadow
    ]
]

ui_game_hud_frame = [
    uiborderedimageclamped $skintex (getclientcolour $ui_hud_focus $playerdisplaytone $playerdisplaytonelevel $playerdisplaytonemix) 0 $ui_texborder $ui_screenborder 0 (*f $game_hud_panel_content_width 0.02) [
        uiclamp 1 1
        uicolourblend 0.5
    ]
]

# ui_game_hud_weapon [
    local _weap_idx _state
    _weap_idx = (getclientweapselect $ui_hud_focus)
    _state    = (getclientweapstate $ui_hud_focus $_weap_idx)

    if (&& [= $_state 7] [!= $_state $game_hud_weapon_last_state]) [
            game_hud_weapon_pickup_anim = 1
    ] [
        if (!= $_weap_idx $game_hud_weapon_weapon_last) [
            game_hud_weapon_switch_anim = 1
        ]
    ]

    uihlist 0 [
        uivlist (*f $game_hud_panel_content_width 0.025) [
            uistyle rightbottom

            ui_game_hud_weapon_ammo
            ui_game_hud_weapon_inventory

            uipropchild [
                uistyle rightbottom
            ]
        ]

        local _base_icon_size _weap _weap_icon _weap_icon_size _weap_colour
        _weap = (at $W_NAMES $_weap_idx)
        _weap_icon = $[@[_weap]tex]
        _weap_colour = $[@[_weap]colour]
        _base_icon_size = (lerpf 1 0.75 $game_hud_weapon_switch_anim)
        _base_icon_size = (*f $_base_icon_size $game_hud_panel_icon_width)
        _weap_icon_size = (*f $_base_icon_size 0.67)

        uifill $game_hud_panel_icon_width $game_hud_panel_icon_width [
            local _pickup_effect_size

            _pickup_effect_size = (lerpf $_base_icon_size $_weap_icon_size $game_hud_weapon_pickup_anim)

            uiimage $_weap_icon $_weap_colour 0 $_pickup_effect_size $_pickup_effect_size [
                uicolourblend $game_hud_weapon_pickup_anim
            ]
            uiimage $_weap_icon $_weap_colour 0 $_weap_icon_size $_weap_icon_size
        ]
    ]

    game_hud_weapon_last_state  = $_state
    game_hud_weapon_weapon_last = $_weap_idx
    game_hud_weapon_switch_anim = (animstep $game_hud_weapon_switch_anim 100 -1)
    game_hud_weapon_pickup_anim = (animstep $game_hud_weapon_pickup_anim 200 -1)
]

game_hud_match_effect_team = 1
game_hud_match_effect_anim = 0

// 1:<group id> 2:<left side>
ui_game_hud_match_team = [
    local _team_name _team_colour _image_size _clip_size _is_best
    _team_name   = (at $teamnames $arg1)
    _team_colour = (getteamcolour $arg1)
    _image_size  = (*f $game_hud_largepanel_width 0.15)
    _clip_size   = (*f $_image_size 0.5)
    _is_best     = (gameui_score_group_is_best $arg1)

    uigroup [
        uiclip 0 $_clip_size 0 (*f $_image_size 1.25) [
            uifill 0 (*f $_image_size 3)

            uiimage $glowtex $_team_colour 0 $_image_size $_image_size [
                uicolourblend 0.33
            ]

            uiimage $(concatword team $_team_name tex) $_team_colour 0 $_image_size $_image_size [
                uicolourblend 0.5
            ]

            if $_is_best [
                _team_colour = (tool_colour_hsvmod_int $_team_colour s 0.4)

                uioffset 0 (*f $_image_size 0.55) [
                    uiimage $glowtex $_team_colour 0 (*f $_clip_size 3) $_clip_size [
                        uicolourblend (gameui_anim_pulse 0.25 0.5 1)
                    ]
                ]
            ]

            uifont "play/clear/bold" [
                local _score_size _score _shadow_offset
                _score_size = (*f $game_hud_largepanel_text_size 1.1)

                if $_is_best [
                    _score_size = (*f $game_hud_largepanel_text_size (gameui_anim_pulse 0.25 1 1.2))
                ]

                _score = ($gameui_score_format (getscoretotal (gameui_score_group_get_sorted_index $arg1)))
                _shadow_offset = (*f $_score_size 0.002)

                uigroup [
                    uioffset $_shadow_offset $_shadow_offset [
                        uicolourtext $_score 0 $_score_size
                    ]

                    if (&& $game_hud_match_effect_anim [= $arg1 $game_hud_match_effect_team]) [
                        local _score_anim _score_anim_size
                        _score_anim      = (gameui_anim_segment $game_hud_match_effect_anim 0.2 1)
                        _score_anim_size = (*f $_score_size (lerpf 3 1 $_score_anim))

                        uitext $_score $_score_anim_size [
                            uicolourblend (lerpf 0 1 $_score_anim)
                        ]
                    ]

                    uitext $_score $_score_size

                    uipropagate [ uicolourblend (? $_is_best 1.0 0.67) ]
                ]
            ]
        ]
    ]
]

ui_game_hud_match_score_effect = [
    local _team_colour _offset
    _team_colour = (getteamcolour $game_hud_match_effect_team)
    _image_size  = (*f $game_hud_largepanel_width 0.1)
    _offset      = 0

    if (= $game_hud_match_effect_team 1) [
        _offset = (lerpf $game_hud_largepanel_width 0 $game_hud_match_effect_anim)
    ] [
        _offset = (lerpf 0 $game_hud_match_effect_anim $game_hud_largepanel_width)
    ]

    uioffset $_offset 0 [
        uialign -1 -2
        uicroppedimage $glowtex $_team_colour 0 (*f $_image_size 2) (*f $_image_size 0.75) 0 0.3 1 0.35 [
            uicolourblend (*f (gameui_anim_flash $game_hud_match_effect_anim 1 1) 0.75)
        ]
    ]

    _score_shadow_colour = (tool_colour_lerp_int 0xaa000000 $_team_colour $game_hud_match_effect_anim)

    game_hud_match_effect_anim = (animstep $game_hud_match_effect_anim 250 -1)
]

ui_game_hud_match_score = [
    uigroup [
        uifill (*f $game_hud_largepanel_width 0.8) 0 [
            // uispace to compensate of slight overspill when using uirender
            uispace 0 0.0005 [
                uihlist (*f $game_hud_largepanel_width 0.15) [
                    ui_game_hud_match_team 1 1
                    ui_game_hud_match_team 2 0
                ]
            ]
        ]

        local _score_shadow_colour
        _score_shadow_colour = 0xaa000000

        if $game_hud_match_effect_anim [
            ui_game_hud_match_score_effect
        ]

        ui_gameui_advshadowhoriz [
            p_colour = @_score_shadow_colour
        ]
    ]
]

ui_game_hud_match = [
    local _colour _warn _time_text _time_mode_text
    _colour = (getclientcolour $ui_hud_focus $playerdisplaytone $playerdisplaytonelevel $playerdisplaytonemix)
    _warn   = (&& (getgametimelimit) [|| (!= $gamestate 5) (< $gametimeremain 60000)])

    gameui_score_update

    uivlist 0 [
        uifill $game_hud_largepanel_width 0 [
            uifill $game_hud_largepanel_width (*f $game_hud_largepanel_text_size 0.01) [
                ui_gameui_advshadowhoriz [
                    p_colour  = (? $_warn (getclientrescolour $ui_hud_focus $PULSE_WARN) 0xaa000000)
                    p_bgblend = 0.5
                ]
            ]

            _time_text      = (timestr (? (getgametimelimit) $gametimeremain $gametimeelapsed) $showtimestyle)
            _time_mode_text = (? (= $gamestate $G_S_PLAYING) (? (getgametimelimit) "REMAINING" "ELAPSED") (at $G_S_NAMES $gamestate))

            uifont "play/clear" [
                uioffset 0 (*f $game_hud_largepanel_text_size -0.025) [
                    uispace (*f $game_hud_largepanel_text_size 0.03) 0 [
                        uicolourtext $_time_mode_text 0xaaffffff (*f $game_hud_largepanel_text_size 0.6)
                    ]
                ]
            ]

            uifont "play/clear/bold" [
                local _shadow_offset
                _shadow_offset = (*f $game_hud_largepanel_text_size 0.002)

                uioffset 0 (*f $game_hud_largepanel_text_size -0.001) [
                    uioffset $_shadow_offset $_shadow_offset [
                        uicolourtext $_time_text 0 $game_hud_largepanel_text_size
                    ]

                    uicolourtext $_time_text 0xffffff $game_hud_largepanel_text_size
                ]
            ]
        ]

        if (= $numscoregroups 2) [
            ui_game_hud_match_score
        ]
    ]
]
