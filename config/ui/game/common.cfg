///////////////
// USER VARS //
///////////////



// Opening animation speed of UI panels
deffvarp gameui_anim_speed 0.00001 0.002 1.0



///////////
// STATE //
///////////



// Current tip
gameui_tip               = ""

// Confirm panel text
gameui_confirm_text      = ""

// Confirm panel action
gameui_confirm_action    = []

// Number of widget states to reset
gameui_num_states        = 0

// ID of the element currently being hovered on
gameui_hover_id          = -1

// Whether currently hovering on an element inside the panel
gameui_hovering          = 0

// Panel animation state (0 - 1)
gameui_panel_anim        = 0

// If the panel was previously closed
gameui_panel_first_open  = 0

// Panel positions and sizes
gameui_panel_old_size    = 0
gameui_panel_new_size    = 0
gameui_panel_old_pos     = 0
gameui_panel_new_pos     = 0

// Variable holding the content of the current panel
gameui_panel_content_var = []

// Default panel handler
gameui_panel_default     = []

// Panel stack
gameui_panel_stack       = []

// Panel stack size
gameui_panel_stack_num   = 0

// Content autoscroll timer
gameui_autoscroll        = 0



///////////////
// CONSTATNS //
///////////////



// Panel stack info UI variable
GAMEUI_PANEL_INFO_UI   = 0

// Panel stack info size
GAMEUI_PANEL_INFO_SIZE = 1

// Panel stack info position
GAMEUI_PANEL_INFO_POS  = 2



//////////////////////
// HELPER FUNCTIONS //
//////////////////////



gameui_last_id = -1

// Returns next unique ID
gameui_get_id = [
    gameui_last_id = (+ $gameui_last_id 1)
    result $gameui_last_id
]

// Resets the unique ID counter
gameui_begin_ids = [
    gameui_last_id = -1
]

// Stores the number of widgets with IDs (states)
gameui_finish_ids = [
    result [
        gameui_num_states = @(gameui_get_id)
    ]
]

// Enables interaction after resize part (first half) of panel open animation
gameui_can_interact = [
    >=f $gameui_panel_anim 0.5
]

// One-shot flash interpolation
// 1:<t> 2:<tension> 3:<length>
gameui_anim_flash = [
    local _r
    _r = (*f 4 (pow $arg3 -2))
    clampf (pow (*f $_r $arg1 (-f $arg3 $arg1)) $arg2) 0 1
]

// Universal hover event used by game UI widgets with valid IDs
gameui_hover = [
    gameui_hovering = 1

    // p_* vars coming from the current widget properties
    if (!= $p_id $gameui_hover_id) [
        gameui_hover_id = $p_id
        gameui_tip      = $p_tip
    ]
]

// Returns a pretty game version string
gameui_pretty_version = [
    local _text
    _text = (concatword "v" $versionstring " (" $versionrelease ")")
    if $versionbuild [_text = (concatword $_text " [" $versionbranch ":" $versionbuild "]")]

    result $_text
]


//////////////////////
// PANEL MANAGEMENT //
//////////////////////



// Pushes current panel onto the stack
gameui_push_stack = [
    local _panel_info
    _panel_info = $gameui_panel_content_var
    append _panel_info $gameui_panel_new_size
    append _panel_info $gameui_panel_new_pos

    append gameui_panel_stack [[@@_panel_info]]

    gameui_panel_stack_num = (+ $gameui_panel_stack_num 1)
]

// Pops and opens the last panel from the stack
gameui_pop_stack = [
    local _panel_info _ui _size _pos
    _panel_info            = (at $gameui_panel_stack -1)
    _ui                    = (at $_panel_info $GAMEUI_PANEL_INFO_UI)
    _size                  = (at $_panel_info $GAMEUI_PANEL_INFO_SIZE)
    _pos                   = (at $_panel_info $GAMEUI_PANEL_INFO_POS)
    gameui_panel_stack     = (listsplice $gameui_panel_stack [] (- $gameui_panel_stack_num 1) 1)
    gameui_panel_stack_num = (- $gameui_panel_stack_num 1)

    gameui_open $_ui $_size $_pos 1
]

// Clears the game UI panel stack
gameui_clear_stack = [
    gameui_panel_stack     = []
    gameui_panel_stack_num = 0
]

// Opens new content in the game UI panel
// Positions and dimensions use normalized (0 - 1) coordinates.
// 1:<content var> 2:<size> 3:<pos> 4:<no push stack>
gameui_open = [
    if (&& [!=s $gameui_panel_content_var] [! $arg4]) [
        gameui_push_stack
    ]

    gameui_panel_first_open  = 0
    gameui_panel_anim        = 0
    gameui_panel_old_size    = $gameui_panel_new_size
    gameui_panel_old_pos     = $gameui_panel_new_pos
    gameui_panel_new_size    = $arg2

    if (!=s $gameui_panel_content_var $arg1) [
        local _open_handler
        _open_handler = (getalias (concatword $arg1 "_on_open"))

        if (!=s $_open_handler "") [
            _open_handler
        ]

        gameui_panel_content_var = $arg1
    ]

    if (< $numargs 3) [
        gameui_panel_new_pos = (*f (-f 1 $arg2) 0.5)
    ] [
        gameui_panel_new_pos = $arg3
    ]

    // Skip resize animation if panel doesn't change
    if (&& [
        <f (absf (-f $gameui_panel_old_size $gameui_panel_new_size)) 0.00001
    ] [
        <f (absf (-f $gameui_panel_old_pos $gameui_panel_new_pos)) 0.00001
    ]) [
        gameui_panel_anim = 0.5
    ]

    loop i $gameui_num_states [
        (concatword "gameui_widget_anim_" $i) = []
    ]
]

// Returns whether there's any panel content to be displayed
gameui_has_panel = [
    !=s $gameui_panel_content_var ""
]

// Closes all panels
gameui_close_all = [
    hideui "main"
    gameui_panel_content_var = []
    gameui_clear_stack
]

// Closes the current panel
gameui_close = [
    local _close_handler
    _close_handler = (getalias (concatword $gameui_panel_content_var "_on_close"))

    if (!=s $_close_handler "") [
        _close_handler
    ]

    if (> $gameui_panel_stack_num 0) [
        gameui_pop_stack
    ] [
        gameui_close_all
    ]
]

// Opens the confirmation panel
// 1:<text> 2:<action>
gameui_confirm = [
    gameui_confirm_text   = $arg1
    gameui_confirm_action = $arg2

    gameui_open ui_gameui_confirm 0.4
]



//////////////
// PANEL UI //
//////////////



# ui_gameui_confirm [
    #(gameui_begin_ids)

    uivlist 0.05 [
        uicolour 0x55010101 (uiwidth $gameui_panel_new_size) 0 [
            uitext $gameui_confirm_text 1.5
        ]

        uihlist 0 [
            ui_gameui_button [
                p_label       = "Yes"
                p_label_align = 0
                p_width       = 0.2
                p_pad_h_shift = 0
                p_on_click    = [
                    gameui_close
                    gameui_confirm_action
                ]
                p_id          = #(gameui_get_id)
            ]

            ui_gameui_button [
                p_label       = "No"
                p_label_align = 0
                p_width       = 0.2
                p_pad_h_shift = 0
                p_on_click    = [
                    gameui_close
                ]
                p_id          = #(gameui_get_id)
            ]
        ]
    ]

    #(gameui_finish_ids)
]

ui_gameui_panel = [
    // Initialize state
    gameui_hovering = 0

    // Steal autoscroll from edit UI
    gameui_autoscroll = (tool_autoscroll (divf (getmillis) 1000))

    local _anim_smooth _anim_size _anim_fadein _size _pos
    // First half of the opening sequence
    _anim_size          = (minf (*f $gameui_panel_anim 2) 1)
    _anim_size_smooth   = (-f 1 (*f (-f 1 $_anim_size) (-f 1 $_anim_size)))
    _size               = (lerp $gameui_panel_old_size $gameui_panel_new_size $_anim_size_smooth)
    _size               = (uiwidth $_size)
    _pos                = (lerp $gameui_panel_old_pos $gameui_panel_new_pos $_anim_size_smooth)
    _pos                = (uiwidth $_pos)
    // Second half of the opening sequence
    _anim_fadein        = (maxf (*f (-f $gameui_panel_anim 0.5) 2) 0)
    _anim_fadein_smooth = (-f 1 (*f (-f 1 $_anim_fadein) (-f 1 $_anim_fadein)))

    uiclip (uiaspect) 1 0 0 [
        uitarget (uiaspect) 1

        uifont "tess" [
            uiclamp 1 1 1 1

            uicolourtext (gameui_pretty_version) 0x88ffffff 0.5
            uialign- 1 1
        ]

        uiclip $_size 1 0 0 [
            uiposition $_pos

            uicolour 0 $_size 1 [
                uichangeblends (*f (? $isconnected 0.5 0.33) (? $gameui_panel_first_open $_anim_size 1))

                if (>f $gameui_panel_anim 0.5) [
                    uioffset 0 (lerp -0.015 0 $_anim_fadein_smooth) [
                        uiclamp 1 1 1 1
                        gameui_panel_content_var
                        uichangeblends $_anim_fadein
                    ]
                ]
            ]
        ]
    ]

    gameui_panel_anim = (minf 1 (+f $gameui_panel_anim (*f $gameui_anim_speed $getupdatemillis)))
]

uioverlay "main" "Main Menu" "" [
    ui_gameui_panel
] [
    gameui_close
] [
    if $gameui_panel_default [
        $gameui_panel_default
    ]

    if (gameui_has_panel) [] [
        hideui "main"
    ]
]
