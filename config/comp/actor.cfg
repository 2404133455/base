shader 0 compositeactor [
    attribute vec4 vvertex, vcolor;
    attribute vec2 vtexcoord0;
    uniform vec4 params; // scale regen dist invdist
    uniform mat4 hudmatrix;
    varying vec2 texcoord0, texcoord1;
    varying vec4 colorscale;

    void main(void)
    {
        gl_Position = hudmatrix * vvertex;
        texcoord0 = vtexcoord0;
        texcoord1 = texcoord0 * params.x;
        colorscale = vcolor;
    }
] [
    uniform sampler2D tex0;
    uniform vec4 params; // scale regen dist invdist
    varying vec2 texcoord0, texcoord1;
    varying vec4 colorscale;

    fragdata(0) vec4 fragcolor;

    void main(void)
    {
        vec4 source = texture2D(tex0, texcoord1);
        vec4 diffuse = vec4(1.0 - source.r) * colorscale;

        if(params.y > 0.0)
        {
            float dist = length(((1.0 - texcoord0.y) - 0.5) - (params.y - 0.5));
            if(dist <= params.z)
            {
                float val = dist * params.w;
                diffuse = mix(diffuse, vec4(0.25, 1.0, 0.25, 1.0) * val, val);
            }
        }

        fragcolor = diffuse;
    }
]

newui actor $SURFACE_COMPOSITE [
    @(localargs cn -1)
    execid uiarg1

    local colour; colour = (getclientcolour $cn $playerovertone $playerovertonelevel)
    local residual; residual = (getclientresidualfx $cn 1000)
    local blend; blend = 0.1

    if (>= $residual 0) [
        local amt; amt = (magcolour $residual 1)
        colour = (skewcolour $colour $residual $amt)
        blend = (+f $blend (*f 0.3 $amt))
    ]

    local regen; regen = 0
    local lastregen; lastregen = (getclientregen $cn)
    if (> $lastregen 0) [
        local offset; offset = (- $lastmillis $lastregen)
        if (<= $offset 500) [
            regen = (divf $offset 500)
        ]
    ]

    local patname; patname = (getclientpattern $cn)
    if (=s $patname "") [ patname = "<comp>blank" ]
    local pattex; pattex = (getpattern $patname 0)
    local patclamp; patclamp = (getpattern $patname 3)
    local patscale; patscale = (getpattern $patname 4)
    if (<=f $patscale 0.0) [ patscale = 1.0 ]

    //echo $cn $colour $blend $regen $patname $pattex $patclamp $patscale

    uirender compositeactor 1 1 [
        uicolourset $colour
        uicolourblend $blend
        uirenderparam params $patscale $regen 0.25 4
        uirendertex $pattex $patclamp
    ]
]
