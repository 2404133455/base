compositedistort = [
    shader 0 (concatword "compositedistort" $arg1) [
        attribute vec4 vvertex, vcolor;
        attribute vec2 vtexcoord0;
        uniform mat4 hudmatrix;
        varying vec2 texcoord0;
        varying vec4 colorscale;

        void main(void)
        {
            gl_Position = hudmatrix * vvertex;
            texcoord0 = vtexcoord0;
            colorscale = vcolor;
        }
    ] [
        uniform sampler2D tex0;
        uniform vec3 params; // frequency amplitude speed
        uniform vec2 factor; // xfactor yfactor
        uniform vec3 tweaks; // feather-x feather-y noise
        uniform float millis;
        varying vec2 texcoord0;
        varying vec4 colorscale;

        fragdata(0) vec4 fragcolor;

        float rand(vec2 co) { return fract(sin(dot(co.xy, vec2(12.9898, 78.233)))*43758.5453); }

        void main()
        {
            vec2 pulse = sin(millis * params.z - params.x * texcoord0);
            float dist = 2.0 * length(texcoord0.y - 0.5);

            vec2 ncoord = mix(texcoord0 + params.y * (pulse.yx * factor), texcoord0, dist);
            vec4 diffuse = texture2D(tex0, ncoord);

            if(tweaks.x > 0.0)
            {
                float offset = texcoord0.x < tweaks.x ? texcoord0.x : 1.0 - texcoord0.x;
                if(offset < tweaks.x) diffuse *= offset / tweaks.x;
            }

            if(tweaks.y > 0.0)
            {
                float offset = texcoord0.y < tweaks.y ? texcoord0.y : 1.0 - texcoord0.y;
                if(offset < tweaks.y) diffuse *= offset / tweaks.y;
            }

            if(tweaks.z > 0.0)
            {
                float noise = rand(vec2(texcoord0.x, texcoord0.y + (rand(vec2(millis)) - 0.5) / 16.0));
                @(if (>= (strstr $arg1 "part") 0) [result [
                    float blend = (((diffuse.r + diffuse.g) * 0.5) + diffuse.b) * 0.5;
                ]] [result [
                    float blend = diffuse.a;
                ]])
                diffuse.rgb = mix(diffuse.rgb, vec3(noise), blend * tweaks.z);
            }

            fragcolor = diffuse * colorscale;
        }
    ]

    newui (concatword "distort" $arg1) $SURFACE_COMPOSITE [
        @(localargs params [64.0 0.05 8.0])
        @(localargs factor [0.125 0.5])
        @(localargs tweaks [0.0 0.0 0.25])
        @(localdef tex "textures/icon")
        execid uiarg1
        uirender @(concatword "compositedistort" $arg1) 1 1 [
            uirenderparam params $params1 $params2 $params3
            uirenderparam factor $factor1 $factor2
            uirenderparam tweaks $tweaks1 $tweaks2 $tweaks3
            uirendertex $tex
        ]
    ]

    newui (concatword "distort" $arg1 "light") $SURFACE_COMPOSITE [
        @(localargs params [64.0 0.05 8.0])
        @(localargs factor [0.025 0.1])
        @(localargs tweaks [0.0 0.0 0.125])
        @(localdef tex "textures/icon")
        execid uiarg1
        uirender @(concatword "compositedistort" $arg1) 1 1 [
            uirenderparam params $params1 $params2 $params3
            uirenderparam factor $factor1 $factor2
            uirenderparam tweaks $tweaks1 $tweaks2 $tweaks3
            uirendertex $tex
        ]
    ]

    newui (concatword "distort" $arg1 "flare") $SURFACE_COMPOSITE [
        @(localargs params [64.0 0.05 8.0])
        @(localargs factor [0.0 1.0])
        @(localargs tweaks [0.0 0.0 0.25])
        @(localdef tex "textures/icon")
        execid uiarg1
        uirender @(concatword "compositedistort" $arg1) 1 1 [
            uirenderparam params $params1 $params2 $params3
            uirenderparam factor $factor1 $factor2
            uirenderparam tweaks $tweaks1 $tweaks2 $tweaks3
            uirendertex $tex
        ]
    ]
]

compositedistort ""
compositedistort "part"
