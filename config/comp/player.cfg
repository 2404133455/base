shader $SHADER_DEFAULT compositeplayermixer [
    attribute vec4 vvertex, vcolor;
    attribute vec2 vtexcoord0;
    uniform mat4 hudmatrix;
    uniform float millis;
    varying vec2 texcoord0;
    varying vec4 colorscale;
    varying float noise;

    float rand(vec2 co) { return fract(sin(dot(co.xy, vec2(12.9898, 78.233)))*43758.5453); }

    void main(void)
    {
        gl_Position = hudmatrix * vvertex;
        texcoord0 = vtexcoord0;
        colorscale = vcolor;
        noise = rand(vec2(millis, millis * 3.33));
    }
] [
    uniform vec4 params; // regen dist invdist scale
    uniform float millis;
    varying vec2 texcoord0;
    varying vec4 colorscale;
    varying vec3 regencolor;
    varying float noise;

    fragdata(0) vec4 fragcolor;

    float rand(vec2 co) { return fract(sin(dot(co.xy, vec2(12.9898, 78.233)))*43758.5453); }

    void main(void)
    {
        vec4 diffuse = colorscale;

        if(params.x > 0.0)
        {
            float dist = abs(params.x - texcoord0.y);
            if(dist < params.y)
            {
                float val = 1.0 - (dist * params.z);
                vec4 outcol = vec4(regencolor * rand(vec2(texcoord0.x * + val, texcoord0.y + noise)) * params.w * val * val, rand(vec2(texcoord0.x + noise, texcoord0.y + val)) * val);
                diffuse = mix(diffuse, outcol, val);
            }
        }
        if(diffuse.a <= 0.0) discard;
        fragcolor = diffuse;
    }
]

newui playermixer $SURFACE_COMPOSITE [
    @(localargs cn -1)
    @(localargs regencol [0 1 0])
    execid uiarg1

    local colour residual blend regen lastreg amt regencol
    colour = 0
    residual = (getclientresidualfx $cn 3000)
    blend = 0.0

    if (>= $residual 0) [
        amt = (divf (mod $lastmillis 500) 250)
        if (>f $amt 1.0) [ amt = (-f 2.0 $amt) ]
        colour = (modcolour (skewcolour $colour $residual $amt) 0.25)
        blend = (+f $blend (*f 0.05 $amt))
    ]

    regen = 0
    lastregen = (getclientregen $cn)
    if (> $lastregen 0) [
        amt = (- $lastmillis $lastregen)
        if (<= $amt 500) [
            regen = (divf $amt 250)
            if (>f $regen 1.0) [ regen = (-f 2.0 $regen) ]
            regen = (-f 1.0 $regen)
        ]
    ]
    setargs regencol (veccolour (pulsecolour $PULSE_REGEN))

    uirender compositeplayermixer 1 1 [
        uicolourblend $blend
        uirenderparam params $regen 0.25 4.0 (*f (divf 1 (getdarkness $DARK_GLOW)) 2.0)
        uirenderparam regencolor (at $regencol 0) (at $regencol 1) (at $regencol 2)
    ]
]
